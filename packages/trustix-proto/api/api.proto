syntax = "proto2";

import "schema/sth.proto";
import "schema/logleaf.proto";

option go_package = "github.com/tweag/trustix/packages/trustix-proto/api";

package trustix;

message STHRequest {
  required string LogID = 1;
}

message GetLogConsistencyProofRequest {
  required string LogID = 1;
  required uint64 FirstSize = 2;
  required uint64 SecondSize = 3;
}

message ProofResponse {
  repeated bytes Proof = 1;
}

message GetLogAuditProofRequest {
  required string LogID = 1;
  required uint64 Index = 2;
  required uint64 TreeSize = 3;
}

message GetLogEntriesRequest {
  required string LogID = 1;
  required uint64 Start = 2;
  required uint64 Finish = 3;
}

message GetMapValueRequest {
  required string LogID = 1;
  required bytes Key = 2;
  required bytes MapRoot = 3;
}

message SparseCompactMerkleProof {
  repeated bytes SideNodes = 1;
  required bytes NonMembershipLeafData = 2;
  required bytes BitMask = 3;
  required uint64 NumSideNodes = 4;
}

message MapValueResponse {
  // Note that the Value field is actually a MapEntry
  // but we need to return the marshaled version
  // as that's what the proof is created from
  required bytes Value = 1;
  required SparseCompactMerkleProof Proof = 2;
}

message LogEntriesResponse {
  repeated LogLeaf Leaves = 1;
}

message KeyValuePair {
  required bytes Key = 1;
  required bytes Value = 2;
}

message ValueRequest {
  required bytes Digest = 1;
}

message ValueResponse {
  required bytes Value = 1;
}

message LogsRequest {
}

message LogSigner {
  enum KeyTypes {
    ed25519 = 0;
  }
  required KeyTypes KeyType = 1;
  required string Public = 2;
}

message Log {
  required string LogID = 1;
  // required string Mode = 2;
  required LogSigner Signer = 3;
  map<string, string> Meta = 4;
  // required STH STH = 5;
}

message LogsResponse {
  repeated Log Logs = 1;
}

service NodeAPI {

  // Get map[LogID]Log
  rpc Logs (LogsRequest) returns (LogsResponse) {}

  // Content-addressed values

  rpc GetValue(ValueRequest) returns (ValueResponse) {}

}

service LogAPI {

  // Aggregate

  rpc GetSTH (STHRequest) returns (STH) {}

  // Log

  rpc GetLogConsistencyProof(GetLogConsistencyProofRequest) returns (ProofResponse) {}

  rpc GetLogAuditProof(GetLogAuditProofRequest) returns (ProofResponse) {}

  rpc GetLogEntries(GetLogEntriesRequest) returns (LogEntriesResponse) {}

  // Map

  rpc GetMapValue(GetMapValueRequest) returns (MapValueResponse) {}

  // Maphead log

  rpc GetMHLogConsistencyProof(GetLogConsistencyProofRequest) returns (ProofResponse) {}

  rpc GetMHLogAuditProof(GetLogAuditProofRequest) returns (ProofResponse) {}

  rpc GetMHLogEntries(GetLogEntriesRequest) returns (LogEntriesResponse) {}

}
