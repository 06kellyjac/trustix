// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.5
// source: api.proto

package api

import (
	schema "github.com/tweag/trustix/packages/trustix-proto/schema"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type STHRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID *string `protobuf:"bytes,1,req,name=LogID" json:"LogID,omitempty"`
}

func (x *STHRequest) Reset() {
	*x = STHRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *STHRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*STHRequest) ProtoMessage() {}

func (x *STHRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use STHRequest.ProtoReflect.Descriptor instead.
func (*STHRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *STHRequest) GetLogID() string {
	if x != nil && x.LogID != nil {
		return *x.LogID
	}
	return ""
}

type GetLogConsistencyProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID      *string `protobuf:"bytes,1,req,name=LogID" json:"LogID,omitempty"`
	FirstSize  *uint64 `protobuf:"varint,2,req,name=FirstSize" json:"FirstSize,omitempty"`
	SecondSize *uint64 `protobuf:"varint,3,req,name=SecondSize" json:"SecondSize,omitempty"`
}

func (x *GetLogConsistencyProofRequest) Reset() {
	*x = GetLogConsistencyProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogConsistencyProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogConsistencyProofRequest) ProtoMessage() {}

func (x *GetLogConsistencyProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogConsistencyProofRequest.ProtoReflect.Descriptor instead.
func (*GetLogConsistencyProofRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetLogConsistencyProofRequest) GetLogID() string {
	if x != nil && x.LogID != nil {
		return *x.LogID
	}
	return ""
}

func (x *GetLogConsistencyProofRequest) GetFirstSize() uint64 {
	if x != nil && x.FirstSize != nil {
		return *x.FirstSize
	}
	return 0
}

func (x *GetLogConsistencyProofRequest) GetSecondSize() uint64 {
	if x != nil && x.SecondSize != nil {
		return *x.SecondSize
	}
	return 0
}

type ProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof [][]byte `protobuf:"bytes,1,rep,name=Proof" json:"Proof,omitempty"`
}

func (x *ProofResponse) Reset() {
	*x = ProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProofResponse) ProtoMessage() {}

func (x *ProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProofResponse.ProtoReflect.Descriptor instead.
func (*ProofResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *ProofResponse) GetProof() [][]byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type GetLogAuditProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID    *string `protobuf:"bytes,1,req,name=LogID" json:"LogID,omitempty"`
	Index    *uint64 `protobuf:"varint,2,req,name=Index" json:"Index,omitempty"`
	TreeSize *uint64 `protobuf:"varint,3,req,name=TreeSize" json:"TreeSize,omitempty"`
}

func (x *GetLogAuditProofRequest) Reset() {
	*x = GetLogAuditProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogAuditProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogAuditProofRequest) ProtoMessage() {}

func (x *GetLogAuditProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogAuditProofRequest.ProtoReflect.Descriptor instead.
func (*GetLogAuditProofRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetLogAuditProofRequest) GetLogID() string {
	if x != nil && x.LogID != nil {
		return *x.LogID
	}
	return ""
}

func (x *GetLogAuditProofRequest) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *GetLogAuditProofRequest) GetTreeSize() uint64 {
	if x != nil && x.TreeSize != nil {
		return *x.TreeSize
	}
	return 0
}

type GetLogEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID  *string `protobuf:"bytes,1,req,name=LogID" json:"LogID,omitempty"`
	Start  *uint64 `protobuf:"varint,2,req,name=Start" json:"Start,omitempty"`
	Finish *uint64 `protobuf:"varint,3,req,name=Finish" json:"Finish,omitempty"`
}

func (x *GetLogEntriesRequest) Reset() {
	*x = GetLogEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogEntriesRequest) ProtoMessage() {}

func (x *GetLogEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetLogEntriesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetLogEntriesRequest) GetLogID() string {
	if x != nil && x.LogID != nil {
		return *x.LogID
	}
	return ""
}

func (x *GetLogEntriesRequest) GetStart() uint64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *GetLogEntriesRequest) GetFinish() uint64 {
	if x != nil && x.Finish != nil {
		return *x.Finish
	}
	return 0
}

type GetMapValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogID   *string `protobuf:"bytes,1,req,name=LogID" json:"LogID,omitempty"`
	Key     []byte  `protobuf:"bytes,2,req,name=Key" json:"Key,omitempty"`
	MapRoot []byte  `protobuf:"bytes,3,req,name=MapRoot" json:"MapRoot,omitempty"`
}

func (x *GetMapValueRequest) Reset() {
	*x = GetMapValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapValueRequest) ProtoMessage() {}

func (x *GetMapValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapValueRequest.ProtoReflect.Descriptor instead.
func (*GetMapValueRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetMapValueRequest) GetLogID() string {
	if x != nil && x.LogID != nil {
		return *x.LogID
	}
	return ""
}

func (x *GetMapValueRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetMapValueRequest) GetMapRoot() []byte {
	if x != nil {
		return x.MapRoot
	}
	return nil
}

type SparseCompactMerkleProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SideNodes             [][]byte `protobuf:"bytes,1,rep,name=SideNodes" json:"SideNodes,omitempty"`
	NonMembershipLeafData []byte   `protobuf:"bytes,2,req,name=NonMembershipLeafData" json:"NonMembershipLeafData,omitempty"`
	BitMask               []byte   `protobuf:"bytes,3,req,name=BitMask" json:"BitMask,omitempty"`
	NumSideNodes          *uint64  `protobuf:"varint,4,req,name=NumSideNodes" json:"NumSideNodes,omitempty"`
}

func (x *SparseCompactMerkleProof) Reset() {
	*x = SparseCompactMerkleProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SparseCompactMerkleProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparseCompactMerkleProof) ProtoMessage() {}

func (x *SparseCompactMerkleProof) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparseCompactMerkleProof.ProtoReflect.Descriptor instead.
func (*SparseCompactMerkleProof) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *SparseCompactMerkleProof) GetSideNodes() [][]byte {
	if x != nil {
		return x.SideNodes
	}
	return nil
}

func (x *SparseCompactMerkleProof) GetNonMembershipLeafData() []byte {
	if x != nil {
		return x.NonMembershipLeafData
	}
	return nil
}

func (x *SparseCompactMerkleProof) GetBitMask() []byte {
	if x != nil {
		return x.BitMask
	}
	return nil
}

func (x *SparseCompactMerkleProof) GetNumSideNodes() uint64 {
	if x != nil && x.NumSideNodes != nil {
		return *x.NumSideNodes
	}
	return 0
}

type MapValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note that the Value field is actually a MapEntry
	// but we need to return the marshaled version
	// as that's what the proof is created from
	Value []byte                    `protobuf:"bytes,1,req,name=Value" json:"Value,omitempty"`
	Proof *SparseCompactMerkleProof `protobuf:"bytes,2,req,name=Proof" json:"Proof,omitempty"`
}

func (x *MapValueResponse) Reset() {
	*x = MapValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapValueResponse) ProtoMessage() {}

func (x *MapValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapValueResponse.ProtoReflect.Descriptor instead.
func (*MapValueResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *MapValueResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MapValueResponse) GetProof() *SparseCompactMerkleProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type LogEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leaves []*schema.LogLeaf `protobuf:"bytes,1,rep,name=Leaves" json:"Leaves,omitempty"`
}

func (x *LogEntriesResponse) Reset() {
	*x = LogEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntriesResponse) ProtoMessage() {}

func (x *LogEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntriesResponse.ProtoReflect.Descriptor instead.
func (*LogEntriesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *LogEntriesResponse) GetLeaves() []*schema.LogLeaf {
	if x != nil {
		return x.Leaves
	}
	return nil
}

type KeyValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,req,name=Key" json:"Key,omitempty"`
	Value []byte `protobuf:"bytes,2,req,name=Value" json:"Value,omitempty"`
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *KeyValuePair) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValuePair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest []byte `protobuf:"bytes,1,req,name=Digest" json:"Digest,omitempty"`
}

func (x *ValueRequest) Reset() {
	*x = ValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueRequest) ProtoMessage() {}

func (x *ValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueRequest.ProtoReflect.Descriptor instead.
func (*ValueRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *ValueRequest) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

type ValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,req,name=Value" json:"Value,omitempty"`
}

func (x *ValueResponse) Reset() {
	*x = ValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueResponse) ProtoMessage() {}

func (x *ValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueResponse.ProtoReflect.Descriptor instead.
func (*ValueResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *ValueResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x69, 0x78, 0x1a, 0x10, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x73, 0x74, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x6c,
	0x6f, 0x67, 0x6c, 0x65, 0x61, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0a,
	0x53, 0x54, 0x48, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f,
	0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44,
	0x22, 0x73, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x61, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x54, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x5a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x06, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x22, 0x56, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x05, 0x4c, 0x6f, 0x67, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x70,
	0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x4d, 0x61, 0x70, 0x52,
	0x6f, 0x6f, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x4e, 0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c,
	0x65, 0x61, 0x66, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x15, 0x4e,
	0x6f, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x4c, 0x65, 0x61, 0x66,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x42, 0x69, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x22,
	0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x53, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x0c, 0x4e, 0x75, 0x6d, 0x53, 0x69, 0x64, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0x61, 0x0a, 0x10, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x05,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x36, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x06, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4c, 0x6f,
	0x67, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x22, 0x36, 0x0a,
	0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x25, 0x0a,
	0x0d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x32, 0xb8, 0x05, 0x0a, 0x0d, 0x54, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78,
	0x4c, 0x6f, 0x67, 0x41, 0x50, 0x49, 0x12, 0x25, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x53, 0x54, 0x48,
	0x12, 0x13, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x53, 0x54, 0x48, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x04, 0x2e, 0x53, 0x54, 0x48, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x2e, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x69, 0x78, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x26, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x20, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x69, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69,
	0x78, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78,
	0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x4d, 0x61, 0x70, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x48, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x26, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x69, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4d, 0x48, 0x4c, 0x6f, 0x67, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x20, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x48, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x1d, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x77,
	0x65, 0x61, 0x67, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x78, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_proto_goTypes = []interface{}{
	(*STHRequest)(nil),                    // 0: trustix.STHRequest
	(*GetLogConsistencyProofRequest)(nil), // 1: trustix.GetLogConsistencyProofRequest
	(*ProofResponse)(nil),                 // 2: trustix.ProofResponse
	(*GetLogAuditProofRequest)(nil),       // 3: trustix.GetLogAuditProofRequest
	(*GetLogEntriesRequest)(nil),          // 4: trustix.GetLogEntriesRequest
	(*GetMapValueRequest)(nil),            // 5: trustix.GetMapValueRequest
	(*SparseCompactMerkleProof)(nil),      // 6: trustix.SparseCompactMerkleProof
	(*MapValueResponse)(nil),              // 7: trustix.MapValueResponse
	(*LogEntriesResponse)(nil),            // 8: trustix.LogEntriesResponse
	(*KeyValuePair)(nil),                  // 9: trustix.KeyValuePair
	(*ValueRequest)(nil),                  // 10: trustix.ValueRequest
	(*ValueResponse)(nil),                 // 11: trustix.ValueResponse
	(*schema.LogLeaf)(nil),                // 12: LogLeaf
	(*schema.STH)(nil),                    // 13: STH
}
var file_api_proto_depIdxs = []int32{
	6,  // 0: trustix.MapValueResponse.Proof:type_name -> trustix.SparseCompactMerkleProof
	12, // 1: trustix.LogEntriesResponse.Leaves:type_name -> LogLeaf
	0,  // 2: trustix.TrustixLogAPI.GetSTH:input_type -> trustix.STHRequest
	10, // 3: trustix.TrustixLogAPI.GetValue:input_type -> trustix.ValueRequest
	1,  // 4: trustix.TrustixLogAPI.GetLogConsistencyProof:input_type -> trustix.GetLogConsistencyProofRequest
	3,  // 5: trustix.TrustixLogAPI.GetLogAuditProof:input_type -> trustix.GetLogAuditProofRequest
	4,  // 6: trustix.TrustixLogAPI.GetLogEntries:input_type -> trustix.GetLogEntriesRequest
	5,  // 7: trustix.TrustixLogAPI.GetMapValue:input_type -> trustix.GetMapValueRequest
	1,  // 8: trustix.TrustixLogAPI.GetMHLogConsistencyProof:input_type -> trustix.GetLogConsistencyProofRequest
	3,  // 9: trustix.TrustixLogAPI.GetMHLogAuditProof:input_type -> trustix.GetLogAuditProofRequest
	4,  // 10: trustix.TrustixLogAPI.GetMHLogEntries:input_type -> trustix.GetLogEntriesRequest
	13, // 11: trustix.TrustixLogAPI.GetSTH:output_type -> STH
	11, // 12: trustix.TrustixLogAPI.GetValue:output_type -> trustix.ValueResponse
	2,  // 13: trustix.TrustixLogAPI.GetLogConsistencyProof:output_type -> trustix.ProofResponse
	2,  // 14: trustix.TrustixLogAPI.GetLogAuditProof:output_type -> trustix.ProofResponse
	8,  // 15: trustix.TrustixLogAPI.GetLogEntries:output_type -> trustix.LogEntriesResponse
	7,  // 16: trustix.TrustixLogAPI.GetMapValue:output_type -> trustix.MapValueResponse
	2,  // 17: trustix.TrustixLogAPI.GetMHLogConsistencyProof:output_type -> trustix.ProofResponse
	2,  // 18: trustix.TrustixLogAPI.GetMHLogAuditProof:output_type -> trustix.ProofResponse
	8,  // 19: trustix.TrustixLogAPI.GetMHLogEntries:output_type -> trustix.LogEntriesResponse
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*STHRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogConsistencyProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogAuditProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SparseCompactMerkleProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
