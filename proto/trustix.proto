syntax = "proto2";

import "schema/mapentry.proto";

option go_package = "github.com/tweag/trustix/proto";

package trustix;

// TrustixCombinedRPC
service TrustixCombinedRPC {
  // Get map[LogName]Log
  rpc Logs (LogsRequest) returns (LogsResponse) {}

  // Get map[LogName]OutputHash
  rpc Get (KeyRequest) returns (EntriesResponse) {}
  rpc GetStream (stream KeyRequest) returns (stream EntriesResponse) {}

  // Compare(inputHash)
  rpc Decide (KeyRequest) returns (DecisionResponse) {}
  rpc DecideStream (stream KeyRequest) returns (stream DecisionResponse) {}

}

message LogsRequest {
}

message LogSigner {
  enum KeyTypes {
    ed25519 = 0;
  }
  required KeyTypes KeyType = 1;
  required string Public = 2;
}

message Log {
  required string Name = 1;
  required string Mode = 2;
  required LogSigner Signer = 3;
  map<string, string> Meta = 4;
}

message LogsResponse {
  repeated Log Logs = 1;
}

message KeyRequest {
  required bytes Key = 1;
}

message EntriesResponse {
  required bytes Key = 1;
  map<string, MapEntry> Entries = 2;
}

message LogValueResponse {
  required string LogName = 1;
  required bytes Value = 2;
}

message LogValueDecision {
  repeated string LogNames = 1;
  required bytes Value = 2;
  required int32 Confidence = 3;
}

message DecisionResponse {
  required LogValueDecision Decision = 1;

  // Non-matches (hash mismatch)
  repeated LogValueResponse Mismatches = 2;

  // Full misses (lognames missing log entry entirely)
  repeated string Misses = 3;
}